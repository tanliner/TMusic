/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** [ADMIN] RUN update_version.sh AFTER CHANGING THIS FILE **/

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.5.1'
versions.apache_commons = "2.5"
versions.arch_core = "2.0.1"
versions.atsl_rules = "1.1.1"
versions.atsl_runner = "1.1.1"
versions.atsl_junit = "1.1.0"
versions.constraint_layout = "1.1.3"
versions.core_ktx = "1.0.0"
versions.dagger = "2.16"
versions.dexmaker = "2.2.0"
versions.espresso = "3.1.1"
versions.fragment = "1.1.0-alpha05"
versions.glide = "4.9.0"
versions.glide_transform = "4.0.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.3.60"
versions.lifecycle = "2.0.0"
versions.rxlifecycle = "2.2.2"
versions.rxbinding = "2.0.0"
versions.rxbinding3 = "3.1.0"
versions.butterknife = "10.0.0"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.8.1"
versions.navigation = "2.1.0-alpha01"
versions.okhttp_logging_interceptor = "3.9.0"
versions.paging = "2.1.0-rc01"
versions.okhttp = "3.9.0"
versions.retrofit = "2.5.0"
versions.cookie = "1.0.1"
versions.robolectric = "4.2"
versions.room = "2.1.0-alpha06"
versions.rx_android = "2.1.0"
versions.rxjava2 = "2.2.10"
versions.support = "1.0.0"
versions.supportv7 = "28.0.0"
versions.timber = "4.5.1"
versions.work = "2.0.0-rc01"
versions.fragmentation = "1.3.6"
versions.andromeda = "1.1.8"
versions.mpchart = "v3.1.0-alpha"
// 3.5.0 -> 4.0.0-alpha3
versions.multitype = "4.0.0-alpha3"
versions.multitypekt = "3.4.4"
versions.SmartRefreshLayout = "1.1.0"
versions.leakcanary = "1.6.1"
versions.gson = "2.8.5"
versions.bugly = "2.6.6.1"
versions.multidex = "2.0.0"
versions.multidexv7 = "1.0.3"
versions.statusbar = "1.5.1"
versions.watchtower = '1.1.0'
versions.eventbus = '3.2.0'


def deps = [:]

def test = [:]
test.runner = 'androidx.test:runner:1.1.0-alpha4'
test.espresso = 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
deps.test = test

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
// old support version, deprecated
// support.exifinterface = "com.android.support:exifinterface:$versions.supportv7"
// support.annotationsv7 = "com.android.support:support-annotations:$versions.supportv7"
// support.app_compatv7 = "androidx.appcompat:appcompat:$versions.supportv7"
// support.recyclerviewv7 = "com.android.support:recyclerview-v7:$versions.support"
// support.cardviewv7 = "com.android.support:cardview-v7:$versions.supportv7"
// support.designv7 = "com.android.support:design:$versions.supportv7"
// support.v13 = "com.android.support:support-v13:$versions.supportv7"
// support.core_utilsv7 = "com.android.support:support-core-utils:$versions.supportv7"
// support.constraint_layout = "com.android.support:constraintlayout:$versions.constraint_layoutv7"
// support.multidexv7 = "com.android.support:multidex:$versions.multidexv7"
// support.core_utils = "com.android.support:support-core-utils:$versions.supportv7"
// support.v13 = "com.android.support:support-v13:$versions.supportv13"

deps.support = support

deps.multidex = "androidx.multidex:multidex:$versions.multidex"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
// deps.google_services = "com.google.gms:google-services:4.2.0"

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def rxlifecycle = [:]
rxlifecycle.rxlifecycle = "com.trello.rxlifecycle2:rxlifecycle-components:$versions.rxlifecycle"
deps.rxlifecycle = rxlifecycle

def rxbinding = [:]
rxbinding.rxbinding = "com.jakewharton.rxbinding2:rxbinding:$versions.rxbinding"
rxbinding.rxbinding3 = "com.jakewharton.rxbinding3:rxbinding:$versions.rxbinding3"
deps.rxbinding = rxbinding

def butterknife = [:]
butterknife.core = "com.jakewharton:butterknife:$versions.butterknife"
butterknife.compiler = "com.jakewharton:butterknife-compiler:$versions.butterknife"
deps.butterknife = butterknife


def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def okhttp = [:]
okhttp.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.scalars = "com.squareup.retrofit2:converter-scalars:$versions.retrofit"
retrofit.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.cookie = "com.github.franmontiel:PersistentCookieJar:v$versions.cookie"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin


def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.transformations = "jp.wasabeef:glide-transformations:$versions.glide_transform"
glide.okhttp = "com.github.bumptech.glide:okhttp3-integration:$versions.glide@aar"
deps.glide = glide

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"

def reactivex = [:]
reactivex.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
reactivex.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.reactivex = reactivex

def leakcanary = [:]
leakcanary.debug_android = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
leakcanary.release_android = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
leakcanary.debug_fragment = "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakcanary"
deps.leakcanary = leakcanary

def watchtower = [:]
watchtower.core = "com.snakyapps.watchtower:core:$versions.watchtower"
watchtower.debug_interceptor = "com.snakyapps.watchtower:interceptor-okhttp:$versions.watchtower"
watchtower.releas_interceptor = "com.snakyapps.watchtower:interceptor-okhttp-no-op:$versions.watchtower"
deps.watchtower = watchtower

def eventbus = [:]
eventbus.core = "org.greenrobot:eventbus:$versions.eventbus"
deps.eventbus = eventbus

ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 22
build_versions.target_sdk = 26
build_versions.compile_sdk = 28
build_versions.build_tools = "28.0.3"
build_versions.version_code = 1
build_versions.version_name = '0.1.0'
build_versions.source_compatibility = 1.8
build_versions.target_compatibility = 1.8
ext.build_versions = build_versions

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation
deps.statusbar = "com.jaeger.statusbarutil:library:$versions.statusbar"

deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.fragmentation = "me.yokeyword:fragmentation:$versions.fragmentation"
deps.andromeda = "org.qiyi.video.svg:core:$versions.andromeda"
deps.mpchart = "com.github.PhilJay:MPAndroidChart:$versions.mpchart"
deps.multitype = "me.drakeet.multitype:multitype:$versions.multitype"
deps.multitypekt = "me.drakeet.multitype:multitype-kotlin:$versions.multitypekt"
deps.SmartRefreshLayout = "com.scwang.smartrefresh:SmartRefreshLayout:$versions.SmartRefreshLayout"
deps.SmartRefreshHeader =  "com.scwang.smartrefresh:SmartRefreshHeader:$versions.SmartRefreshLayout"

deps.andromeda_plugin = "org.qiyi.video.svg:plugin:1.1.1"
deps.butterknife_gradle_plugin = "com.jakewharton:butterknife-gradle-plugin:9.0.0-rc2"
deps.kotterknife = "com.jakewharton:kotterknife:0.1.0-SNAPSHOT"
deps.BottomNavigationViewEx = "com.github.ittianyu:BottomNavigationViewEx:2.0.2"

deps.pgyersdk = "com.pgyersdk:sdk:2.8.1"
deps.bugly_crashreport = "com.tencent.bugly:crashreport:$versions.bugly"
deps.bugly_nativecrashreport = "com.tencent.bugly:nativecrashreport:3.3.1"
deps.flexbox = "com.google.android:flexbox:1.0.0"
deps.circleimage = "de.hdodenhof:circleimageview:3.1.0"
deps.mmkv = 'com.tencent:mmkv:1.0.14'
deps.autosize = "me.jessyan:autosize:1.1.2"
deps.codec = "commons-codec:commons-codec:1.10"

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    // handler.google()
    // handler.jcenter()
    handler.maven { url "https://jitpack.io" } // for BottomNavigationViewEx
    // handler.maven { url "https://maven.fabric.io/public" }
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://kotlin.bintray.com/kotlinx/" } // For kotlinx-metadata-jvm used by Room 2.1.0 (KT-27991)
    handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
}
ext.addRepos = this.&addRepos